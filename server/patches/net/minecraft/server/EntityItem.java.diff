--- EntityItem.java
+++ EntityItem.java
@@ -1,4 +1,8 @@
-package net.minecraft.src;
+package net.minecraft.server;
 
+//LilyBukkit start
+import org.bukkit.event.player.PlayerPickupItemEvent;
+//LilyBukkit end
+
 public class EntityItem extends Entity {
     public ItemStack item;
@@ -8,5 +12,8 @@
     private int health;
     public float hoverStart;
-    
+    //LilyBukkit start
+    private int lastTick = (int) (System.currentTimeMillis() / 50);
+    //LilyBukkit end
+
     public EntityItem(final World world, final double x, final double y, final double z, final ItemStack item) {
         super(world);
@@ -18,4 +25,11 @@
         this.setPosition(x, y, z);
         this.item = item;
+        //LilyBukkit start - infinite item tweaking
+        /*
+        if (world.getServer().isB173() && this.item.stackSize < 0){
+            this.item.stackSize = 0;
+        }
+         */
+        //LilyBukkit end
         this.rotationYaw = (float)(Math.random() * 360.0);
         this.motionX = (float)(Math.random() * 0.20000000298023224 - 0.10000000149011612);
@@ -24,5 +38,5 @@
         this.canTriggerWalking = false;
     }
-    
+
     public EntityItem(final World world) {
         super(world);
@@ -33,11 +47,13 @@
         this.yOffset = this.height / 2.0f;
     }
-    
+
     @Override
     public void onUpdate() {
         super.onUpdate();
-        if (this.delayBeforeCanPickup > 0) {
-            --this.delayBeforeCanPickup;
-        }
+        //LilyBukkit start
+        int currentTick = (int) (System.currentTimeMillis() / 50);
+        this.delayBeforeCanPickup -= (currentTick - this.lastTick);
+        this.lastTick = currentTick;
+        //LilyBukkit end
         this.prevPosX = this.posX;
         this.prevPosY = this.posY;
@@ -48,5 +64,5 @@
             this.motionX = (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2f;
             this.motionZ = (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2f;
-            this.worldObj.playSoundAtEntity((Entity)this, "random.fizz", 0.4f, 2.0f + this.rand.nextFloat() * 0.4f);
+            this.worldObj.playSoundAtEntity(this, "random.fizz", 0.4f, 2.0f + this.rand.nextFloat() * 0.4f);
         }
         this.pushOutOfBlocks(this.posX, this.posY, this.posZ);
@@ -73,10 +89,10 @@
         }
     }
-    
+
     @Override
     public boolean handleWaterMovement() {
         return this.worldObj.handleMaterialAcceleration(this.boundingBox, Material.water, this);
     }
-    
+
     private boolean pushOutOfBlocks(final double x, final double y, final double z) {
         final int i7 = MathHelper.floor_double(x);
@@ -141,10 +157,10 @@
         return false;
     }
-    
+
     @Override
     protected void dealFireDamage(final int fireDamage) {
         this.attackEntityFrom(null, fireDamage);
     }
-    
+
     @Override
     public boolean attackEntityFrom(final Entity entity, final int damage) {
@@ -155,11 +171,11 @@
         return false;
     }
-    
+
     public void writeEntityToNBT(final NBTTagCompound nbttagcompound) {
-        nbttagcompound.setShort("Health", (short)(byte)this.health);
+        nbttagcompound.setShort("Health", (byte)this.health);
         nbttagcompound.setShort("Age", (short)this.age);
         nbttagcompound.setCompoundTag("Item", this.item.writeToNBT(new NBTTagCompound()));
     }
-    
+
     public void readEntityFromNBT(final NBTTagCompound nbttagcompound) {
         this.health = (nbttagcompound.getShort("Health") & 0xFF);
@@ -168,5 +184,5 @@
         this.item = new ItemStack(nBTTagCompound2);
     }
-    
+
     @Override
     public void onCollideWithPlayer(final EntityPlayer entityPlayer) {
@@ -174,5 +190,5 @@
             final int i2 = this.item.stackSize;
             if (this.delayBeforeCanPickup == 0 && entityPlayer.inventory.addItemStackToInventory(this.item)) {
-                this.worldObj.playSoundAtEntity((Entity)this, "random.pop", 0.2f, ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7f + 1.0f) * 2.0f);
+                this.worldObj.playSoundAtEntity(this, "random.pop", 0.2f, ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7f + 1.0f) * 2.0f);
                 entityPlayer.onItemPickup(this, i2);
                 this.setEntityDead();
