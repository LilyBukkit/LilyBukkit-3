--- EntityMinecart.java
+++ EntityMinecart.java
@@ -1,3 +1,3 @@
-package net.minecraft.src;
+package net.minecraft.server;
 
 import java.util.List;
@@ -20,9 +20,9 @@
     private double minecartYaw;
     private double minecartPitch;
-    
+
     static {
         matrix = new int[][][] { { { 0, 0, -1 }, { 0, 0, 1 } }, { { -1, 0, 0 }, { 1, 0, 0 } }, { { -1, -1, 0 }, { 1, 0, 0 } }, { { -1, 0, 0 }, { 1, -1, 0 } }, { { 0, 0, -1 }, { 0, -1, 1 } }, { { 0, -1, -1 }, { 0, 0, 1 } }, { { 0, 0, 1 }, { 1, 0, 0 } }, { { 0, 0, 1 }, { -1, 0, 0 } }, { { 0, 0, -1 }, { -1, 0, 0 } }, { { 0, 0, -1 }, { 1, 0, 0 } } };
     }
-    
+
     public EntityMinecart(final World world) {
         super(world);
@@ -37,20 +37,20 @@
         this.canTriggerWalking = false;
     }
-    
+
     @Override
     public AxisAlignedBB getCollisionBox(final Entity entity) {
         return entity.boundingBox;
     }
-    
+
     @Override
     public AxisAlignedBB getBoundingBox() {
         return this.boundingBox;
     }
-    
+
     @Override
     public boolean canBePushed() {
         return true;
     }
-    
+
     public EntityMinecart(final World world, final double x, final double y, final double z, final int minecartType) {
         this(world);
@@ -64,10 +64,10 @@
         this.minecartType = minecartType;
     }
-    
+
     @Override
     public double getMountedYOffset() {
         return this.height * 0.0 - 0.30000001192092896;
     }
-    
+
     @Override
     public boolean attackEntityFrom(final Entity entity, final int damage) {
@@ -78,8 +78,8 @@
             this.entityDropItem(Item.minecartEmpty.shiftedIndex, 1, 0.0f);
             if (this.minecartType == 1) {
-                this.entityDropItem(Block.chest.blockID, 1, 0.0f);
+                this.entityDropItem(Block.CHEST.blockID, 1, 0.0f);
             }
             else if (this.minecartType == 2) {
-                this.entityDropItem(Block.stoneOvenIdle.blockID, 1, 0.0f);
+                this.entityDropItem(Block.STONE_OVEN_IDLE.blockID, 1, 0.0f);
             }
             this.setEntityDead();
@@ -87,10 +87,10 @@
         return true;
     }
-    
+
     @Override
     public boolean canBeCollidedWith() {
         return !this.isDead;
     }
-    
+
     @Override
     public void setEntityDead() {
@@ -106,6 +106,5 @@
                         i2 = itemStack2.stackSize;
                     }
-                    final ItemStack itemStack3 = itemStack2;
-                    itemStack3.stackSize -= i2;
+                    itemStack2.stackSize -= i2;
                     final EntityItem entityItem7 = new EntityItem(this.worldObj, this.posX + f3, this.posY + f4, this.posZ + f5, new ItemStack(itemStack2.itemID, i2, itemStack2.itemDmg));
                     final float f6 = 0.05f;
@@ -119,5 +118,5 @@
         super.setEntityDead();
     }
-    
+
     @Override
     public void onUpdate() {
@@ -157,5 +156,5 @@
             int i2 = MathHelper.floor_double(this.posY);
             final int i3 = MathHelper.floor_double(this.posZ);
-            if (this.worldObj.getBlockId(i1, i2 - 1, i3) == Block.minecartTrack.blockID) {
+            if (this.worldObj.getBlockId(i1, i2 - 1, i3) == Block.MINECART_TRACK.blockID) {
                 --i2;
             }
@@ -163,5 +162,5 @@
             boolean z6 = false;
             final double d44 = 0.0078125;
-            if (this.worldObj.getBlockId(i1, i2, i3) == Block.minecartTrack.blockID) {
+            if (this.worldObj.getBlockId(i1, i2, i3) == Block.MINECART_TRACK.blockID) {
                 final Vec3D vec3D9 = this.getPos(this.posX, this.posY, this.posZ);
                 final int i4 = this.worldObj.getBlockMetadata(i1, i2, i3);
@@ -350,6 +349,6 @@
             final List list15 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.expand(0.20000000298023224, 0.0, 0.20000000298023224));
             if (list15 != null && list15.size() > 0) {
-                for (int i8 = 0; i8 < list15.size(); ++i8) {
-                    final Entity entity17 = (Entity)list15.get(i8);
+                for (Object o : list15) {
+                    final Entity entity17 = (Entity) o;
                     if (entity17 != this.riddenByEntity && entity17.canBePushed() && entity17 instanceof EntityMinecart) {
                         entity17.applyEntityCollision(this);
@@ -371,13 +370,13 @@
         }
     }
-    
+
     public Vec3D getPos(double x, double y, double z) {
         final int i7 = MathHelper.floor_double(x);
         int i8 = MathHelper.floor_double(y);
         final int i9 = MathHelper.floor_double(z);
-        if (this.worldObj.getBlockId(i7, i8 - 1, i9) == Block.minecartTrack.blockID) {
+        if (this.worldObj.getBlockId(i7, i8 - 1, i9) == Block.MINECART_TRACK.blockID) {
             --i8;
         }
-        if (this.worldObj.getBlockId(i7, i8, i9) == Block.minecartTrack.blockID) {
+        if (this.worldObj.getBlockId(i7, i8, i9) == Block.MINECART_TRACK.blockID) {
             final int i10 = this.worldObj.getBlockMetadata(i7, i8, i9);
             y = i8;
@@ -422,5 +421,5 @@
         return null;
     }
-    
+
     @Override
     protected void writeEntityToNBT(final NBTTagCompound nbttagcompound) {
@@ -441,8 +440,8 @@
                 }
             }
-            nbttagcompound.setTag("Items", (NBTBase)nBTTagList2);
+            nbttagcompound.setTag("Items", nBTTagList2);
         }
     }
-    
+
     @Override
     protected void readEntityFromNBT(final NBTTagCompound nbttagcompound) {
@@ -465,5 +464,5 @@
         }
     }
-    
+
     @Override
     public void applyEntityCollision(final Entity entity) {
@@ -526,10 +525,10 @@
         }
     }
-    
+
     @Override
     public int getSizeInventory() {
         return 27;
     }
-    
+
     @Override
     public ItemStack getStackInSlot(final int slot) {
