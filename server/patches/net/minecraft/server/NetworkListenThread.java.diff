--- NetworkListenThread.java
+++ NetworkListenThread.java
@@ -1,8 +1,7 @@
-package net.minecraft.src;
+package net.minecraft.server;
 
 import java.util.logging.Level;
 import java.io.IOException;
 import java.net.InetAddress;
-import net.minecraft.server.MinecraftServer;
 import java.util.ArrayList;
 import java.net.ServerSocket;
@@ -18,9 +17,9 @@
     private ArrayList playerList;
     public MinecraftServer mcServer;
-    
+
     static {
         NetworkListenThread.logger = Logger.getLogger("Minecraft");
     }
-    
+
     public NetworkListenThread(final MinecraftServer minecraftServer, final InetAddress address, final int port) throws IOException {
         this.isListening = false;
@@ -33,9 +32,9 @@
         (this.listenThread = new NetworkAcceptThread(this, "Listen thread", minecraftServer)).start();
     }
-    
+
     public void addPlayer(final NetServerHandler netServerHandler) {
         this.playerList.add(netServerHandler);
     }
-    
+
     private void addPendingConnection(final NetLoginHandler netLoginHandler) {
         if (netLoginHandler == null) {
@@ -44,5 +43,5 @@
         this.pendingConnections.add(netLoginHandler);
     }
-    
+
     public void handleNetworkListenThread() {
         for (int i1 = 0; i1 < this.pendingConnections.size(); ++i1) {
@@ -53,5 +52,5 @@
             catch (Exception exception5) {
                 netLoginHandler2.kickUser("Internal server error");
-                NetworkListenThread.logger.log(Level.WARNING, new StringBuilder("Failed to handle packet: ").append(exception5).toString(), (Throwable)exception5);
+                NetworkListenThread.logger.log(Level.WARNING, "Failed to handle packet: " + exception5, exception5);
             }
             if (netLoginHandler2.finishedProcessing) {
@@ -66,5 +65,5 @@
             catch (Exception exception6) {
                 netServerHandler6.kickPlayer("Internal server error");
-                NetworkListenThread.logger.log(Level.WARNING, new StringBuilder("Failed to handle packet: ").append(exception6).toString(), (Throwable)exception6);
+                NetworkListenThread.logger.log(Level.WARNING, "Failed to handle packet: " + exception6, exception6);
             }
             if (netServerHandler6.connectionClosed) {
@@ -73,13 +72,13 @@
         }
     }
-    
+
     static ServerSocket getServerSocket(final NetworkListenThread listenThread) {
         return listenThread.serverSocket;
     }
-    
+
     static int incrementConnections(final NetworkListenThread listenThread) {
         return listenThread.connectionNumber++;
     }
-    
+
     static void addPendingConnection(final NetworkListenThread listenThread, final NetLoginHandler netLoginHandler) {
         listenThread.addPendingConnection(netLoginHandler);
