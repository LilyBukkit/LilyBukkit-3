--- NBTTagList.java
+++ NBTTagList.java
@@ -1,3 +1,3 @@
-package net.minecraft.src;
+package net.minecraft.server;
 
 import java.io.DataInput;
@@ -10,9 +10,9 @@
     private List tagList;
     private byte tagType;
-    
+
     public NBTTagList() {
-        this.tagList = (List)new ArrayList();
+        this.tagList = new ArrayList();
     }
-    
+
     @Override
     void writeTagContents(final DataOutput dataOutput) throws IOException {
@@ -23,16 +23,16 @@
             this.tagType = 1;
         }
-        dataOutput.writeByte((int)this.tagType);
+        dataOutput.writeByte(this.tagType);
         dataOutput.writeInt(this.tagList.size());
-        for (int i2 = 0; i2 < this.tagList.size(); ++i2) {
-            ((NBTBase)this.tagList.get(i2)).writeTagContents(dataOutput);
+        for (Object o : this.tagList) {
+            ((NBTBase) o).writeTagContents(dataOutput);
         }
     }
-    
+
     @Override
     void readTagContents(final DataInput dataInput) throws IOException {
         this.tagType = dataInput.readByte();
         final int i2 = dataInput.readInt();
-        this.tagList = (List)new ArrayList();
+        this.tagList = new ArrayList();
         for (int i3 = 0; i3 < i2; ++i3) {
             final NBTBase nBTBase4 = NBTBase.createTagOfType(this.tagType);
@@ -41,23 +41,23 @@
         }
     }
-    
+
     @Override
     public byte getType() {
         return 9;
     }
-    
+
     public String toString() {
-        return new StringBuilder().append(this.tagList.size()).append(" entries of type ").append(NBTBase.getTagName(this.tagType)).toString();
+        return this.tagList.size() + " entries of type " + NBTBase.getTagName(this.tagType);
     }
-    
+
     public void setTag(final NBTBase nbtbase) {
         this.tagType = nbtbase.getType();
         this.tagList.add(nbtbase);
     }
-    
+
     public NBTBase tagAt(final int index) {
         return (NBTBase)this.tagList.get(index);
     }
-    
+
     public int tagCount() {
         return this.tagList.size();
