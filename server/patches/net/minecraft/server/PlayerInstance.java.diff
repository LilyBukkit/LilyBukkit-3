--- PlayerInstance.java
+++ PlayerInstance.java
@@ -1,3 +1,3 @@
-package net.minecraft.src;
+package net.minecraft.server;
 
 import java.io.IOException;
@@ -19,8 +19,8 @@
     private int maxZ;
     final PlayerManager playerManager;
-    
+
     public PlayerInstance(final PlayerManager playerManager, final int x, final int z) {
         this.playerManager = playerManager;
-        this.players = (List)new ArrayList();
+        this.players = new ArrayList();
         this.blocksToUpdate = new short[10];
         this.numBlocksToUpdate = 0;
@@ -30,8 +30,8 @@
         PlayerManager.getMinecraftServer(playerManager).worldMngr.chunkProviderServer.loadChunk(x, z);
     }
-    
+
     public void addPlayer(final EntityPlayerMP entityPlayerMP) {
         if (this.players.contains(entityPlayerMP)) {
-            throw new IllegalStateException(new StringBuilder("Failed to add player. ").append(entityPlayerMP).append(" already is in chunk ").append(this.chunkX).append(", ").append(this.chunkZ).toString());
+            throw new IllegalStateException("Failed to add player. " + entityPlayerMP + " already is in chunk " + this.chunkX + ", " + this.chunkZ);
         }
         entityPlayerMP.loadChunks.add(this.currentChunk);
@@ -40,8 +40,8 @@
         entityPlayerMP.loadedChunks.add(this.currentChunk);
     }
-    
+
     public void removePlayer(final EntityPlayerMP entityPlayerMP) {
         if (!this.players.contains(entityPlayerMP)) {
-            new IllegalStateException(new StringBuilder("Failed to remove player. ").append(entityPlayerMP).append(" isn't in chunk ").append(this.chunkX).append(", ").append(this.chunkZ).toString()).printStackTrace();
+            new IllegalStateException("Failed to remove player. " + entityPlayerMP + " isn't in chunk " + this.chunkX + ", " + this.chunkZ).printStackTrace();
         }
         else {
@@ -61,5 +61,5 @@
         }
     }
-    
+
     public void markBlockNeedsUpdate(final int x, final int y, final int z) {
         if (this.numBlocksToUpdate == 0) {
@@ -100,8 +100,8 @@
         }
     }
-    
+
     public void sendTileEntity(final Packet packet) {
-        for (int i2 = 0; i2 < this.players.size(); ++i2) {
-            final EntityPlayerMP entityPlayerMP3 = (EntityPlayerMP)this.players.get(i2);
+        for (Object player : this.players) {
+            final EntityPlayerMP entityPlayerMP3 = (EntityPlayerMP) player;
             if (entityPlayerMP3.loadChunks.contains(this.currentChunk)) {
                 entityPlayerMP3.playerNetServerHandler.sendPacket(packet);
@@ -109,5 +109,5 @@
         }
     }
-    
+
     public void onUpdate() throws IOException {
         if (this.numBlocksToUpdate != 0) {
@@ -132,6 +132,6 @@
                 this.sendTileEntity(new Packet51MapChunk(i1, i2, i3, i4, i5, i6, PlayerManager.getMinecraftServer(this.playerManager).worldMngr));
                 final List list7 = PlayerManager.getMinecraftServer(this.playerManager).worldMngr.getTileEntityList(i1, i2, i3, i1 + i4, i2 + i5, i3 + i6);
-                for (int i7 = 0; i7 < list7.size(); ++i7) {
-                    final TileEntity tileEntity9 = (TileEntity)list7.get(i7);
+                for (Object o : list7) {
+                    final TileEntity tileEntity9 = (TileEntity) o;
                     this.sendTileEntity(new Packet59ComplexEntity(tileEntity9.xCoord, tileEntity9.yCoord, tileEntity9.zCoord, tileEntity9));
                 }
