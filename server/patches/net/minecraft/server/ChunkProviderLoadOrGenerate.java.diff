--- ChunkProviderLoadOrGenerate.java
+++ ChunkProviderLoadOrGenerate.java
@@ -1,3 +1,3 @@
-package net.minecraft.src;
+package net.minecraft.server;
 
 import java.io.IOException;
@@ -12,5 +12,5 @@
     int lastQueriedChunkZPos;
     private Chunk lastQueriedChunk;
-    
+
     public ChunkProviderLoadOrGenerate(final World world, final IChunkLoader chunkLoader, final IChunkProvider chunkProvider) {
         this.chunks = new Chunk[1024];
@@ -24,5 +24,5 @@
         this.chunkProvider = chunkProvider;
     }
-    
+
     public boolean chunkExists(final int x, final int z) {
         if (x == this.lastQueriedChunkXPos && z == this.lastQueriedChunkZPos && this.lastQueriedChunk != null) {
@@ -34,5 +34,5 @@
         return this.chunks[i5] != null && (this.chunks[i5] == this.blankChunk || this.chunks[i5].isAtLocation(x, z));
     }
-    
+
     public Chunk provideChunk(final int x, final int z) {
         if (x == this.lastQueriedChunkXPos && z == this.lastQueriedChunkZPos && this.lastQueriedChunk != null) {
@@ -79,5 +79,5 @@
         return this.chunks[i5];
     }
-    
+
     private Chunk getChunkAt(final int x, final int z) {
         if (this.chunkLoader == null) {
@@ -96,5 +96,5 @@
         }
     }
-    
+
     private void saveExtraChunkData(final Chunk chunk) {
         if (this.chunkLoader != null) {
@@ -107,5 +107,5 @@
         }
     }
-    
+
     private void saveChunk(final Chunk chunk) {
         if (this.chunkLoader != null) {
@@ -119,5 +119,5 @@
         }
     }
-    
+
     public void populate(final IChunkProvider chunkProvider, final int x, final int z) {
         final Chunk chunk4 = this.provideChunk(x, z);
@@ -130,5 +130,5 @@
         }
     }
-    
+
     public boolean saveChunks(final boolean flag, final IProgressUpdate progressUpdate) {
         int i3 = 0;
@@ -167,5 +167,5 @@
         return true;
     }
-    
+
     public boolean unload100OldestChunks() {
         if (this.chunkLoader != null) {
@@ -174,5 +174,5 @@
         return this.chunkProvider.unload100OldestChunks();
     }
-    
+
     public boolean canSave() {
         return true;
