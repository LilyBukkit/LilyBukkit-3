--- Explosion.java
+++ Explosion.java
@@ -1,3 +1,3 @@
-package net.minecraft.src;
+package net.minecraft.server;
 
 import java.util.List;
@@ -9,5 +9,5 @@
     public void doExplosion(final World world, final Entity entity, final double x, final double y, final double z, float power) {
         world.playSoundEffect(x, y, z, "random.explode", 4.0f, (1.0f + (world.rand.nextFloat() - world.rand.nextFloat()) * 0.2f) * 0.7f);
-        final HashSet hashSet10 = new HashSet();
+        final HashSet<ChunkPosition> hashSet10 = new HashSet<>();
         final float f11 = power;
         final byte b12 = 16;
@@ -53,33 +53,28 @@
         final int i21 = MathHelper.floor_double(z - power - 1.0);
         final int i22 = MathHelper.floor_double(z + power + 1.0);
-        final List list19 = world.getEntitiesWithinAABBExcludingEntity(entity, AxisAlignedBB.getBoundingBoxFromPool(i13, i15, i21, i14, i20, i22));
+        final List<Entity> list19 = world.getEntitiesWithinAABBExcludingEntity(entity, AxisAlignedBB.getBoundingBoxFromPool(i13, i15, i21, i14, i20, i22));
         final Vec3D vec3D47 = Vec3D.createVector(x, y, z);
-        for (int i23 = 0; i23 < list19.size(); ++i23) {
-            final Entity entity2 = (Entity)list19.get(i23);
-            final double d23 = entity2.getDistance(x, y, z) / power;
+        for (Entity entity1 : list19) {
+            final double d23 = entity1.getDistance(x, y, z) / power;
             if (d23 <= 1.0) {
-                double d20 = entity2.posX - x;
-                double d21 = entity2.posY - y;
-                double d22 = entity2.posZ - z;
+                double d20 = entity1.posX - x;
+                double d21 = entity1.posY - y;
+                double d22 = entity1.posZ - z;
                 final double d24 = MathHelper.sqrt_double(d20 * d20 + d21 * d21 + d22 * d22);
                 d20 /= d24;
                 d21 /= d24;
                 d22 /= d24;
-                final double d25 = world.getBlockDensity(vec3D47, entity2.boundingBox);
+                final double d25 = world.getBlockDensity(vec3D47, entity1.boundingBox);
                 final double d26 = (1.0 - d23) * d25;
-                entity2.attackEntityFrom(entity, (int)((d26 * d26 + d26) / 2.0 * 8.0 * power + 1.0));
-                final Entity entity3 = entity2;
-                entity3.motionX += d20 * d26;
-                final Entity entity4 = entity2;
-                entity4.motionY += d21 * d26;
-                final Entity entity5 = entity2;
-                entity5.motionZ += d22 * d26;
+                entity1.attackEntityFrom(entity1, (int) ((d26 * d26 + d26) / 2.0 * 8.0 * power + 1.0));
+                entity1.motionX += d20 * d26;
+                entity1.motionY += d21 * d26;
+                entity1.motionZ += d22 * d26;
             }
         }
         power = f11;
-        final ArrayList arrayList48 = new ArrayList();
-        arrayList48.addAll((Collection)hashSet10);
+        final ArrayList<ChunkPosition> arrayList48 = new ArrayList<>(hashSet10);
         for (int i24 = arrayList48.size() - 1; i24 >= 0; --i24) {
-            final ChunkPosition chunkPosition51 = (ChunkPosition)arrayList48.get(i24);
+            final ChunkPosition chunkPosition51 = arrayList48.get(i24);
             final int i25 = chunkPosition51.x;
             final int i26 = chunkPosition51.y;
@@ -102,5 +97,5 @@
                 d27 *= d30;
                 d28 *= d30;
-                world.spawnParticle("explode", (d22 + x * 1.0) / 2.0, (d24 + y * 1.0) / 2.0, (d25 + z * 1.0) / 2.0, d26, d27, d28);
+                world.spawnParticle("explode", (d22 + x) / 2.0, (d24 + y) / 2.0, (d25 + z) / 2.0, d26, d27, d28);
                 world.spawnParticle("smoke", d22, d24, d25, d26, d27, d28);
             }
