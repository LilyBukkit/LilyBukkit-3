--- GuiStatsComponent.java
+++ GuiStatsComponent.java
@@ -1,3 +1,3 @@
-package net.minecraft.src;
+package net.minecraft.server;
 
 import java.awt.Graphics;
@@ -12,5 +12,5 @@
     private int updateCounter;
     private String[] displayStrings;
-    
+
     public GuiStatsComponent() {
         this.memoryUse = new int[256];
@@ -20,17 +20,17 @@
         this.setMinimumSize(new Dimension(256, 196));
         this.setMaximumSize(new Dimension(256, 196));
-        new Timer(500, (ActionListener)new GuiStatsListener(this)).start();
+        new Timer(500, new GuiStatsListener(this)).start();
         this.setBackground(Color.BLACK);
     }
-    
+
     private void update() {
         final long j1 = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
         System.gc();
-        this.displayStrings[0] = new StringBuilder("Memory use: ").append(j1 / 1024L / 1024L).append(" mb (").append(Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory()).append("% free)").toString();
-        this.displayStrings[1] = new StringBuilder("Threads: ").append(NetworkManager.numReadThreads).append(" + ").append(NetworkManager.numWriteThreads).toString();
+        this.displayStrings[0] = "Memory use: " + j1 / 1024L / 1024L + " mb (" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + "% free)";
+        this.displayStrings[1] = "Threads: " + NetworkManager.numReadThreads + " + " + NetworkManager.numWriteThreads;
         this.memoryUse[this.updateCounter++ & 0xFF] = (int)(j1 * 100L / Runtime.getRuntime().maxMemory());
         this.repaint();
     }
-    
+
     public void paint(final Graphics graphics) {
         graphics.setColor(new Color(16777215));
@@ -49,5 +49,5 @@
         }
     }
-    
+
     static void update(final GuiStatsComponent component) {
         component.update();
