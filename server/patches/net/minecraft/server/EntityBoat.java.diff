--- EntityBoat.java
+++ EntityBoat.java
@@ -1,3 +1,3 @@
-package net.minecraft.src;
+package net.minecraft.server;
 
 import java.util.List;
@@ -7,5 +7,5 @@
     public int timeSinceHit;
     public int forwardDirection;
-    
+
     public EntityBoat(final World world) {
         super(world);
@@ -18,25 +18,25 @@
         this.canTriggerWalking = false;
     }
-    
+
     @Override
     public AxisAlignedBB getCollisionBox(final Entity entity) {
         return entity.boundingBox;
     }
-    
+
     @Override
     public AxisAlignedBB getBoundingBox() {
         return this.boundingBox;
     }
-    
+
     @Override
     public boolean canBePushed() {
         return true;
     }
-    
+
     @Override
     public double getMountedYOffset() {
         return this.height * 0.0 - 0.30000001192092896;
     }
-    
+
     @Override
     public boolean attackEntityFrom(final Entity entity, final int damage) {
@@ -46,5 +46,5 @@
         if (this.damageTaken > 40) {
             for (int i3 = 0; i3 < 3; ++i3) {
-                this.entityDropItem(Block.planks.blockID, 1, 0.0f);
+                this.entityDropItem(Block.PLANKS.blockID, 1, 0.0f);
             }
             for (int i3 = 0; i3 < 2; ++i3) {
@@ -55,10 +55,10 @@
         return true;
     }
-    
+
     @Override
     public boolean canBeCollidedWith() {
         return !this.isDead;
     }
-    
+
     @Override
     public void onUpdate() {
@@ -130,5 +130,5 @@
             this.setEntityDead();
             for (int i6 = 0; i6 < 3; ++i6) {
-                this.entityDropItem(Block.planks.blockID, 1, 0.0f);
+                this.entityDropItem(Block.PLANKS.blockID, 1, 0.0f);
             }
             for (int i6 = 0; i6 < 2; ++i6) {
@@ -162,6 +162,6 @@
         final List list18 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.expand(0.20000000298023224, 0.0, 0.20000000298023224));
         if (list18 != null && list18.size() > 0) {
-            for (int i7 = 0; i7 < list18.size(); ++i7) {
-                final Entity entity20 = (Entity)list18.get(i7);
+            for (Object o : list18) {
+                final Entity entity20 = (Entity) o;
                 if (entity20 != this.riddenByEntity && entity20.canBePushed() && entity20 instanceof EntityBoat) {
                     entity20.applyEntityCollision(this);
@@ -173,5 +173,5 @@
         }
     }
-    
+
     @Override
     protected void updateRiderPosition() {
@@ -180,9 +180,9 @@
         this.riddenByEntity.setPosition(this.posX + d1, this.posY + this.getMountedYOffset() + this.riddenByEntity.getYOffset(), this.posZ + d2);
     }
-    
+
     @Override
     protected void writeEntityToNBT(final NBTTagCompound nbttagcompound) {
     }
-    
+
     @Override
     protected void readEntityFromNBT(final NBTTagCompound nbttagcompound) {
