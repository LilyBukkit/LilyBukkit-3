--- BlockIce.java
+++ BlockIce.java
@@ -3,4 +3,8 @@
 import java.util.Random;
 
+//LilyBukkit start
+import org.bukkit.event.block.BlockFadeEvent;
+//LilyBukkit end
+
 public class BlockIce extends BlockBreakable {
     public BlockIce(final int id, final int blockIndex) {
@@ -9,28 +13,39 @@
         this.setTickOnLoad(true);
     }
-    
+
     @Override
     public boolean shouldSideBeRendered(final IBlockAccess blockAccess, final int x, final int y, final int z, final int side) {
         return super.shouldSideBeRendered(blockAccess, x, y, z, 1 - side);
     }
-    
+
     @Override
     public void onBlockRemoval(final World world, final int x, final int y, final int z) {
         final Material material5 = world.getBlockMaterial(x, y - 1, z);
         if (material5.getIsSolid() || material5.getIsLiquid()) {
-            world.setBlockWithNotify(x, y, z, Block.waterMoving.blockID);
+            world.setBlockWithNotify(x, y, z, Block.WATER_MOVING.blockID);
         }
     }
-    
+
     @Override
     public int quantityDropped(final Random random) {
         return 0;
     }
-    
+
     @Override
     public void updateTick(final World world, final int x, final int y, final int z, final Random random) {
         if (world.getSavedLightValue(EnumSkyBlock.Block, x, y, z) > 11 - Block.lightOpacity[this.blockID]) {
+            //LilyBukkit start
+            org.bukkit.block.BlockState blockState = world.getWorld().getBlockAt(x, y, z).getState();
+            blockState.setTypeId(this.blockID);
+
+            BlockFadeEvent event = new BlockFadeEvent(blockState.getBlock(), blockState);
+            world.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+            //LilyBukkit end
             this.dropBlockAsItem(world, x, y, z, world.getBlockMetadata(x, y, z));
-            world.setBlockWithNotify(x, y, z, Block.waterStill.blockID);
+            world.setBlockWithNotify(x, y, z, Block.WATER_STILL.blockID);
         }
     }
