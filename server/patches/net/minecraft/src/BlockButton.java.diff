--- BlockButton.java
+++ BlockButton.java
@@ -3,4 +3,8 @@
 import java.util.Random;
 
+//LilyBukkit start
+import org.bukkit.event.block.BlockRedstoneEvent;
+//LilyBukkit end
+
 public class BlockButton extends Block {
     protected BlockButton(final int id, final int blockIndex) {
@@ -8,25 +12,25 @@
         this.setTickOnLoad(true);
     }
-    
+
     @Override
     public AxisAlignedBB getCollisionBoundingBoxFromPool(final World world, final int x, final int y, final int z) {
         return null;
     }
-    
+
     @Override
     public int tickRate() {
         return 20;
     }
-    
+
     @Override
     public boolean isOpaqueCube() {
         return false;
     }
-    
+
     @Override
     public boolean canPlaceBlockAt(final World world, final int x, final int y, final int z) {
         return world.isBlockNormalCube(x - 1, y, z) || world.isBlockNormalCube(x + 1, y, z) || world.isBlockNormalCube(x, y, z - 1) || world.isBlockNormalCube(x, y, z + 1);
     }
-    
+
     @Override
     public void onBlockPlaced(final World world, final int x, final int y, final int z, final int notifyFlag) {
@@ -48,22 +52,19 @@
         world.setBlockMetadataWithNotify(x, y, z, i6 + i7);
     }
-    
+
     @Override
     public void onBlockAdded(final World world, final int x, final int y, final int z) {
         if (world.isBlockNormalCube(x - 1, y, z)) {
             world.setBlockMetadataWithNotify(x, y, z, 1);
-        }
-        else if (world.isBlockNormalCube(x + 1, y, z)) {
+        } else if (world.isBlockNormalCube(x + 1, y, z)) {
             world.setBlockMetadataWithNotify(x, y, z, 2);
-        }
-        else if (world.isBlockNormalCube(x, y, z - 1)) {
+        } else if (world.isBlockNormalCube(x, y, z - 1)) {
             world.setBlockMetadataWithNotify(x, y, z, 3);
-        }
-        else if (world.isBlockNormalCube(x, y, z + 1)) {
+        } else if (world.isBlockNormalCube(x, y, z + 1)) {
             world.setBlockMetadataWithNotify(x, y, z, 4);
         }
         this.checkIfAttachedToBlock(world, x, y, z);
     }
-    
+
     @Override
     public void onNeighborBlockChange(final World world, final int x, final int y, final int z, final int flag) {
@@ -89,5 +90,5 @@
         }
     }
-    
+
     private boolean checkIfAttachedToBlock(final World world, final int x, final int y, final int z) {
         if (!this.canPlaceBlockAt(world, x, y, z)) {
@@ -98,5 +99,5 @@
         return true;
     }
-    
+
     @Override
     public void setBlockBoundsBasedOnState(final IBlockAccess blockAccess, final int x, final int y, final int z) {
@@ -113,71 +114,81 @@
         if (i6 == 1) {
             this.setBlockBounds(0.0f, f8, 0.5f - f10, f11, f9, 0.5f + f10);
-        }
-        else if (i6 == 2) {
+        } else if (i6 == 2) {
             this.setBlockBounds(1.0f - f11, f8, 0.5f - f10, 1.0f, f9, 0.5f + f10);
-        }
-        else if (i6 == 3) {
+        } else if (i6 == 3) {
             this.setBlockBounds(0.5f - f10, f8, 0.0f, 0.5f + f10, f9, f11);
-        }
-        else if (i6 == 4) {
+        } else if (i6 == 4) {
             this.setBlockBounds(0.5f - f10, f8, 1.0f - f11, 0.5f + f10, f9, 1.0f);
         }
     }
-    
+
     @Override
     public void onBlockClicked(final World world, final int x, final int y, final int z, final EntityPlayer entityPlayer) {
         this.blockActivated(world, x, y, z, entityPlayer);
     }
-    
+
     @Override
     public boolean blockActivated(final World world, final int x, final int y, final int z, final EntityPlayer entityPlayer) {
-        final int i6 = world.getBlockMetadata(x, y, z);
-        final int i7 = i6 & 0x7;
-        final int i8 = 8 - (i6 & 0x8);
+        final int buttonMetadata = world.getBlockMetadata(x, y, z);
+        final int i7 = buttonMetadata & 0x7;
+        final int i8 = 8 - (buttonMetadata & 0x8);
         if (i8 == 0) {
             return true;
+        } else {
+            //LilyBukkit start
+            org.bukkit.block.Block block = world.getWorld().getBlockAt(x, y, z);
+            int old = (i8 != 8) ? 1 : 0;
+            int current = (i8 == 8) ? 1 : 0;
+
+            BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, old, current);
+            world.getServer().getPluginManager().callEvent(eventRedstone);
+
+            if ((eventRedstone.getNewCurrent() > 0) != (i8 == 0)) {
+                return true;
+            }
+            //LilyBukkit end
+            world.setBlockMetadataWithNotify(x, y, z, i7 + i8);
+            world.markBlocksDirty(x, y, z, x, y, z);
+            world.playSoundEffect(x + 0.5, y + 0.5, z + 0.5, "random.click", 0.3f, 0.6f);
+            world.notifyBlocksOfNeighborChange(x, y, z, this.blockID);
+            if (i7 == 1) {
+                world.notifyBlocksOfNeighborChange(x - 1, y, z, this.blockID);
+            } else if (i7 == 2) {
+                world.notifyBlocksOfNeighborChange(x + 1, y, z, this.blockID);
+            } else if (i7 == 3) {
+                world.notifyBlocksOfNeighborChange(x, y, z - 1, this.blockID);
+            } else if (i7 == 4) {
+                world.notifyBlocksOfNeighborChange(x, y, z + 1, this.blockID);
+            } else {
+                world.notifyBlocksOfNeighborChange(x, y - 1, z, this.blockID);
+            }
+            world.scheduleBlockUpdate(x, y, z, this.blockID);
+            return true;
         }
-        world.setBlockMetadataWithNotify(x, y, z, i7 + i8);
-        world.markBlocksDirty(x, y, z, x, y, z);
-        world.playSoundEffect(x + 0.5, y + 0.5, z + 0.5, "random.click", 0.3f, 0.6f);
-        world.notifyBlocksOfNeighborChange(x, y, z, this.blockID);
-        if (i7 == 1) {
-            world.notifyBlocksOfNeighborChange(x - 1, y, z, this.blockID);
-        }
-        else if (i7 == 2) {
-            world.notifyBlocksOfNeighborChange(x + 1, y, z, this.blockID);
-        }
-        else if (i7 == 3) {
-            world.notifyBlocksOfNeighborChange(x, y, z - 1, this.blockID);
-        }
-        else if (i7 == 4) {
-            world.notifyBlocksOfNeighborChange(x, y, z + 1, this.blockID);
-        }
-        else {
-            world.notifyBlocksOfNeighborChange(x, y - 1, z, this.blockID);
-        }
-        world.scheduleBlockUpdate(x, y, z, this.blockID);
-        return true;
     }
-    
+
     @Override
     public void onBlockRemoval(final World world, final int x, final int y, final int z) {
         final int i5 = world.getBlockMetadata(x, y, z);
         if ((i5 & 0x8) > 0) {
+            //LilyBukkit start
+            org.bukkit.block.Block block = world.getWorld().getBlockAt(x, y, z);
+
+            BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, 1, 0);
+            world.getServer().getPluginManager().callEvent(eventRedstone);
+
+            if (eventRedstone.getNewCurrent() > 0) return;
+            //LilyBukkit end
             world.notifyBlocksOfNeighborChange(x, y, z, this.blockID);
             final int i6 = i5 & 0x7;
             if (i6 == 1) {
                 world.notifyBlocksOfNeighborChange(x - 1, y, z, this.blockID);
-            }
-            else if (i6 == 2) {
+            } else if (i6 == 2) {
                 world.notifyBlocksOfNeighborChange(x + 1, y, z, this.blockID);
-            }
-            else if (i6 == 3) {
+            } else if (i6 == 3) {
                 world.notifyBlocksOfNeighborChange(x, y, z - 1, this.blockID);
-            }
-            else if (i6 == 4) {
+            } else if (i6 == 4) {
                 world.notifyBlocksOfNeighborChange(x, y, z + 1, this.blockID);
-            }
-            else {
+            } else {
                 world.notifyBlocksOfNeighborChange(x, y - 1, z, this.blockID);
             }
@@ -185,10 +196,10 @@
         super.onBlockRemoval(world, x, y, z);
     }
-    
+
     @Override
     public boolean isPoweringTo(final IBlockAccess blockAccess, final int x, final int y, final int z, final int unused) {
         return (blockAccess.getBlockMetadata(x, y, z) & 0x8) > 0;
     }
-    
+
     @Override
     public boolean isIndirectlyPoweringTo(final World world, final int x, final int y, final int z, final int flag) {
@@ -200,10 +211,10 @@
         return (i7 == 5 && flag == 1) || (i7 == 4 && flag == 2) || (i7 == 3 && flag == 3) || (i7 == 2 && flag == 4) || (i7 == 1 && flag == 5);
     }
-    
+
     @Override
     public boolean canProvidePower() {
         return true;
     }
-    
+
     @Override
     public void updateTick(final World world, final int x, final int y, final int z, final Random random) {
@@ -215,15 +226,11 @@
             if (i7 == 1) {
                 world.notifyBlocksOfNeighborChange(x - 1, y, z, this.blockID);
-            }
-            else if (i7 == 2) {
+            } else if (i7 == 2) {
                 world.notifyBlocksOfNeighborChange(x + 1, y, z, this.blockID);
-            }
-            else if (i7 == 3) {
+            } else if (i7 == 3) {
                 world.notifyBlocksOfNeighborChange(x, y, z - 1, this.blockID);
-            }
-            else if (i7 == 4) {
+            } else if (i7 == 4) {
                 world.notifyBlocksOfNeighborChange(x, y, z + 1, this.blockID);
-            }
-            else {
+            } else {
                 world.notifyBlocksOfNeighborChange(x, y - 1, z, this.blockID);
             }
