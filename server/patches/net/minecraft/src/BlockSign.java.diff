--- BlockSign.java
+++ BlockSign.java
@@ -3,8 +3,12 @@
 import java.util.Random;
 
+//LilyBukkit start
+import org.bukkit.event.block.BlockRedstoneEvent;
+//LilyBukkit end
+
 public class BlockSign extends BlockContainer {
     private Class signEntityClass;
     private boolean isFreestanding;
-    
+
     protected BlockSign(final int id, final Class signEntityClass, final boolean isFreestanding) {
         super(id, Material.wood);
@@ -16,10 +20,10 @@
         this.setBlockBounds(0.5f - f4, 0.0f, 0.5f - f4, 0.5f + f4, f5, 0.5f + f4);
     }
-    
+
     @Override
     public AxisAlignedBB getCollisionBoundingBoxFromPool(final World world, final int x, final int y, final int z) {
         return null;
     }
-    
+
     @Override
     public void setBlockBoundsBasedOnState(final IBlockAccess blockAccess, final int x, final int y, final int z) {
@@ -46,30 +50,29 @@
         }
     }
-    
+
     @Override
     public int getRenderType() {
         return -1;
     }
-    
+
     @Override
     public boolean isOpaqueCube() {
         return false;
     }
-    
+
     @Override
     protected TileEntity getBlockEntity() {
         try {
-            return (TileEntity)this.signEntityClass.newInstance();
+            return (TileEntity) this.signEntityClass.newInstance();
+        } catch (Exception exception2) {
+            throw new RuntimeException((Throwable) exception2);
         }
-        catch (Exception exception2) {
-            throw new RuntimeException((Throwable)exception2);
-        }
     }
-    
+
     @Override
     public int idDropped(final int count, final Random random) {
         return Item.sign.shiftedIndex;
     }
-    
+
     @Override
     public void onNeighborBlockChange(final World world, final int x, final int y, final int z, final int flag) {
@@ -79,6 +82,5 @@
                 z2 = true;
             }
-        }
-        else {
+        } else {
             final int i7 = world.getBlockMetadata(x, y, z);
             z2 = true;
@@ -101,4 +103,14 @@
         }
         super.onNeighborBlockChange(world, x, y, z, flag);
+
+        //LilyBukkit start
+        if (Block.blocksList[1] != null && Block.blocksList[1].canProvidePower()) {
+            org.bukkit.block.Block block = world.getWorld().getBlockAt(i, j, k);
+            int power = block.getBlockPower();
+
+            BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, power, power);
+            world.getServer().getPluginManager().callEvent(eventRedstone);
+        }
+        //LilyBukkit end
     }
 }
